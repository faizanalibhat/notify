name: Deploy Notify Service

on:
  push:
    branches: [ develop, master ]

env:
  SERVICE_NAME: notify
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/develop' && 'staging' || 'production' }}
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ github.ref == 'refs/heads/develop' && secrets.STAGING_SSH_PRIVATE_KEY || secrets.PROD_SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        env:
          DEPLOY_ENV: ${{ github.ref == 'refs/heads/develop' && 'staging' || 'production' }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ github.ref == 'refs/heads/develop' && secrets.STAGING_HOST || secrets.PROD_HOST }} << 'EOF'
            cd /root/${{ env.DEPLOY_ENV }}
            docker compose pull ${{ env.SERVICE_NAME }}
            docker compose up -d ${{ env.SERVICE_NAME }}
          EOF

      - name: Print debug info
        run: |
          echo "Deploying to environment: ${{ env.DEPLOY_ENV }}"
          echo "Using host: ${{ github.ref == 'refs/heads/develop' && secrets.STAGING_HOST || secrets.PROD_HOST }}"
          echo "Using SSH username: ${{ secrets.SSH_USERNAME }}"
